课程笔记整理http://blog.csdn.net/u012759878/article/details/49007869
非纯，允许有变量。支持高阶，函数可以作为变量；支持闭包，有了闭包就能返回函数



python把函数作为参数
利用add(x,y,f)函数，计算：x开方+y开方
import math
def add(x, y, f):
    return f(x) + f(y)
print add(25, 9, math.sqrt)

python中map()函数
map()是 Python 内置的高阶函数，它接收一个函数 f 和一个 list，并通过把函数 f 依次作用在 list 的每个元素上，得到一个新的 list 并返回。
假设用户输入的英文名字不规范，没有按照首字母大写，后续字母小写的规则，
请利用map()函数，把一个list（包含若干不规范的英文名字）变成一个包含规范英文名字的list：
输入：['adam', 'LISA', 'barT']
输出：['Adam', 'Lisa', 'Bart']
def format_name(s):
    return s[0].upper()+s[1:].lower()
print map(format_name, ['adam', 'LISA', 'barT'])


python中reduce()函数
reduce()函数也是Python内置的一个高阶函数。reduce()函数接收的参数和 map()类似，一个函数 f，一个list，
但行为和 map()不同，reduce()传入的函数 f 必须接收两个参数，reduce()对list的每个元素反复调用函数f，并返回最终结果值。
reduce()还可以接收第3个可选参数，作为计算的初始值。如果把初始值设为100，计算：
reduce(f, [1, 3, 5, 7, 9], 100)结果将变为125，因为第一轮计算是：计算初始值和第一个元素：f(100, 1)，结果为101。

Python内置了求和函数sum()，但没有求积的函数，请利用recude()来求积：
输入：[2, 4, 5, 7, 12]
输出：2*4*5*7*12的结果
def prod(x, y):
    return x*y
print reduce(prod, [2, 4, 5, 7, 12])


python中filter()函数
请利用filter()过滤出1~100中平方根是整数的数，即结果应该是：[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
import math
def is_sqr(x):
    return math.sqrt(x)%1==0
print filter(is_sqr, range(1,101))


python中自定义排序函数
对字符串排序时，有时候忽略大小写排序更符合习惯。请利用sorted()高阶函数，实现忽略大小写排序的算法。
输入：['bob', 'about', 'Zoo', 'Credit']
输出：['about', 'bob', 'Credit', 'Zoo']
def cmp_ignore_case(s1, s2):
    if s1.upper()>s2.upper():
        return 1
    if s1.upper()<s2.upper():
        return -1
    return 0
print sorted(['bob', 'about', 'Zoo', 'Credit'], cmp_ignore_case)









